import { eq } from "./eq.js";
import { neq } from "./neq.js";
import { gte } from "./gte.js";
import { gt } from "./gt.js";
import { lt } from "./lt.js";
import { lte } from "./lte.js";
/**
 * Do a comparison of two semantic version objects based on the given operator
 * @param s0 The left side of the comparison
 * @param operator The operator to use for the comparison
 * @param s1 The right side of the comparison
 * @returns True or false based on the operator
 */
export function cmp(s0, operator, s1) {
    switch (operator) {
        case "":
        case "=":
        case "==":
        case "===":
            return eq(s0, s1);
        case "!=":
        case "!==":
            return neq(s0, s1);
        case ">":
            return gt(s0, s1);
        case ">=":
            return gte(s0, s1);
        case "<":
            return lt(s0, s1);
        case "<=":
            return lte(s0, s1);
        default:
            throw new TypeError(`Invalid operator: ${operator}`);
    }
}
