"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.cmp = void 0;
const eq_js_1 = require("./eq.js");
const neq_js_1 = require("./neq.js");
const gte_js_1 = require("./gte.js");
const gt_js_1 = require("./gt.js");
const lt_js_1 = require("./lt.js");
const lte_js_1 = require("./lte.js");
/**
 * Do a comparison of two semantic version objects based on the given operator
 * @param s0 The left side of the comparison
 * @param operator The operator to use for the comparison
 * @param s1 The right side of the comparison
 * @returns True or false based on the operator
 */
function cmp(s0, operator, s1) {
    switch (operator) {
        case "":
        case "=":
        case "==":
        case "===":
            return (0, eq_js_1.eq)(s0, s1);
        case "!=":
        case "!==":
            return (0, neq_js_1.neq)(s0, s1);
        case ">":
            return (0, gt_js_1.gt)(s0, s1);
        case ">=":
            return (0, gte_js_1.gte)(s0, s1);
        case "<":
            return (0, lt_js_1.lt)(s0, s1);
        case "<=":
            return (0, lte_js_1.lte)(s0, s1);
        default:
            throw new TypeError(`Invalid operator: ${operator}`);
    }
}
exports.cmp = cmp;
