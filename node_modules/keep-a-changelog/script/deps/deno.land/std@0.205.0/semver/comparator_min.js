"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.comparatorMin = void 0;
const constants_js_1 = require("./constants.js");
const gt_js_1 = require("./gt.js");
const increment_js_1 = require("./increment.js");
/**
 * The minimum semantic version that could match this comparator
 * @param semver The semantic version of the comparator
 * @param operator The operator of the comparator
 * @returns The minimum valid semantic version
 */
function comparatorMin(semver, operator) {
    if (semver === constants_js_1.ANY) {
        return constants_js_1.MIN;
    }
    switch (operator) {
        case ">":
            return semver.prerelease.length > 0
                ? (0, increment_js_1.increment)(semver, "pre")
                : (0, increment_js_1.increment)(semver, "patch");
        case "!=":
        case "!==":
        case "<=":
        case "<":
            // The min(<0.0.0) is MAX
            return (0, gt_js_1.gt)(semver, constants_js_1.MIN) ? constants_js_1.MIN : constants_js_1.MAX;
        case ">=":
        case "":
        case "=":
        case "==":
        case "===":
            return semver;
    }
}
exports.comparatorMin = comparatorMin;
