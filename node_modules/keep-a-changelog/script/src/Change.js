"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class Change {
    static extractIssues(text, issues) {
        return text
            .replace(/(^|[^\\])\[#(\d+)\](?=[^\(]|$)/g, (_, start, index) => {
            if (!issues.includes(index)) {
                issues.push(index);
            }
            return `${start}[#${index}]`;
        })
            .replace(/(^|[\s,])#(\d+)(?=[\s,\.]|$)/g, (_, start, index) => {
            if (!issues.includes(index)) {
                issues.push(index);
            }
            return `${start}[#${index}]`;
        });
    }
    constructor(title, description = "") {
        Object.defineProperty(this, "title", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "description", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "issues", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
        this.title = Change.extractIssues(title, this.issues);
        this.description = Change.extractIssues(description, this.issues);
    }
    toString() {
        let t = this.title.split("\n").map((line) => `  ${line}`.trimEnd());
        t[0] = "-" + t[0].substr(1);
        if (this.description) {
            t.push("");
            t = t.concat(this.description.split("\n").map((line) => `  ${line}`.trimEnd()));
        }
        return t.join("\n").trim();
    }
}
exports.default = Change;
